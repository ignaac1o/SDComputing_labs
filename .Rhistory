import pandas as np
import pandas as pd
import pandas as pd
print(3+3)
reticulate::repl_python()
import pandas as pd
reticulate::repl_python()
install.packages("reticulate")
reticulate::repl_python()
reticulate::repl_python()
install.packages("reticulate")
reticulate::repl_python()
install.packages("Miniconda")
reticulate::repl_python()
library(reticualte)
library(reticualate)
library(reticulate)
reticulate::repl_python()
library(reticulate)
reticulate::repl_python()
use_virtualenv("r-reticulate")
conda_list()
reticulate::repl_python()
conda_install("r-reticulate","pandas")
reticulate::repl_python()
library(reticulate)
reticulate::repl_python()
repl_python()
knitr::opts_chunk$set(echo = TRUE)
datos=read.csv("gendata.csv")
datos=read.csv("gendata.csv")
View(datos)
datos=read.csv("gendata.csv",sep=";")
View(datos)
finance_data=read.csv("financing-effects.csv")
View(finance_data)
finance_data=read.csv("financing-effects.csv",sep=";")
View(finance_data)
car_data=read.csv("car-prices.csv",sep=";")
car_data
View(car_data)
datos=read.csv("gendata.csv",sep=";")
View(datos)
table(datos)
table(datos$snp1)
table(datos$snp2)
table(datos$snp3)
table(datos$snp4)
model=lm(datos, conc~.)
model=lm(data = datos, formula = conc~.)
model=lm(data = datos, formula = conc~.)
par(mfrow=c(2,2))
plot(model)
model=lm(data = datos, formula = conc~.)
#par(mfrow=c(2,2))
plot(model)
outoplot(model)
library(ggplot2)
outoplot(model)
autoplot(model)
summary(model)
library(ggplot2)
model=lm(data = datos, formula = conc~. -id)
summary(model)
#par(mfrow=c(2,2))
plot(model)
#autoplot(model)
library(ggplot2)
model=lm(data = datos, formula = conc~. -id)
summary(model)
par(mfrow=c(2,2))
plot(model)
#autoplot(model)
summary(datos)
datos$snp1 %<>% as.factor()
library(dplyr)
datos$snp1 %<>% as.factor()
library(magrittr)
datos$snp1 %<>% as.factor()
summary(datos)
libary(mapply)
library(purrr)
datos$snp1 %<>% as.factor()
datos$snp2 %<>% as.factor()
datos$snp3 %<>% as.factor()
datos$snp4 %<>% as.factor()
datos$snp5 %<>% as.factor()
datos$snp6 %<>% as.factor()
datos$snp7 %<>% as.factor()
datos$snp7 %<>% as.factor()
summary(datos)
datos$snp8 %<>% as.factor()
summary(datos)
library(ggplot2)
model=lm(data = datos, formula = conc~. -id)
summary(model)
par(mfrow=c(2,2))
plot(model)
summary(datos)
#autoplot(model)
datos=read.csv("gendata.csv",sep=";")
library(ggplot2)
model=lm(data = datos, formula = conc~. -id)
summary(model)
par(mfrow=c(2,2))
plot(model)
summary(datos)
library(ggplot2)
model=lm(data = datos, formula = log(conc)~. -id)
summary(model)
par(mfrow=c(2,2))
plot(model)
summary(datos)
#autoplot(model)
model=gam(data = datos, formula = conc~. -id)
model=glvm(data = datos, formula = conc~. -id)
model=glm(data = datos, formula = conc~. -id)
summary(model)
plot(model)
summary(model)
model=gam(data = datos, formula = conc~. -id)
library(mgcv)
model=gam(data = datos, formula = conc~. -id)
model=gam(data = datos, formula = conc~s(snp1) + s(snp2) + s(snp3) + s(snp4)
+s(snp5) + s(snp6) + s(snp7) + s(snp8) -id,method = "REML")
model=gam(data = datos, formula = conc~s(snp1) + s(snp2) + s(snp3) + s(snp4)
+s(snp5) + s(snp6) + s(snp7) + s(snp8),method = "REML")
#plot
theta=seq(0,1,lenght(100))
#plot
theta=seq(0,1,length(100))
theta=seq(0,1,length(100))
plot(thetha,posterior(theta),type="l")
lines(thetha,prior(theta),type="l")
theta=seq(0,1,length(100))
plot(theta,posterior(theta),type="l")
lines(theta,prior(theta),color="red")
a=1
b=1
#prior
prior=function(thetha) dbeta(theta,a,b)
#posterior
posterior=function(thetha) dbeta(theta,y+a,n-y+b)
theta=seq(0,1,length(100))
plot(theta,posterior(theta),type="l")
lines(theta,prior(theta),color="red")
theta=seq(0,1,length(100))
plot(theta,posterior(theta),type="l")
lines(theta,prior(theta),col="red")
#plot
theta=seq(0,1,length(100))
plot(theta,posterior(theta),type="l")
a=1
b=1
y=0
n=20
#prior
prior=function(thetha) dbeta(theta,a,b)
#posterior
posterior=function(thetha) dbeta(theta,y+a,n-y+b)
#plot
theta=seq(0,1,length(100))
plot(theta,posterior(theta),type="l")
lines(theta,prior(theta),col="red")
qbeta(c(0.025,0.975),a+y,n-y+b)
lines(thehta,l(thetha),col="black")
lines(theta,l(thetha),col="black")
theta=seq(0,1,length(100))
plot(theta,posterior(theta),type="l")
lines(theta,prior(theta),col="red")
qbeta(c(0.025,0.975),a+y,n-y+b)
l=function(thetha) 0.012
lines(theta,l(thetha),col="black")
lines(l(thetha),col="black")
l(theta)
lines(1:6,l(thetha),col="black")
l=function(thetha) rep(0.012,6)
lines(1:6,l(thetha),col="black")
lines(y=1:6,x=l(thetha),col="black")
l=function(thetha) rep(0.012,100)
lines(y=1:100,x=l(thetha),col="black")
l=function(thetha) rep(0.012,20)
lines(y=1:100,x=l(thetha),col="black")
qbeta(c(0.025,0.975),a+y,n-y+b)
l=function(thetha) rep(0.012,20)
lines(y=1:20,x=l(thetha),col="black")
qbeta(c(0.025,0.975),a+y,n-y+b)
l=function(thetha) rep(0.012,posterior(0.012])
l2=function(thetha) rep(0.1610,20)
lines(y=1:20,x=l(thetha),col="black")
lines(y=1:50,x=l(thetha),col="black")
lines(y=1:posterior(0.012),x=l(thetha),col="black")
l=function(thetha) rep(0.012,posterior(0.012])
l2=function(thetha) rep(0.1610,50)
lines(y=1:posterior(0.012),x=l(thetha),col="black")
lines(y=1:50,x=l(thetha),col="black")
l
l2
l(thetha = )
posterior(0.012)
posterior(0.012)[1]
l=function(thetha) rep(0.012,posterior(0.012)[1])
lines(y=1:posterior(0.012)[1],x=l(thetha),col="black")
qbeta(c(0.025,0.975),a+y,n-y+b)
l=function(thetha) rep(0.012,posterior(0.012)[1])
l2=function(thetha) rep(0.1610,posterior(0.161)[1])
lines(y=1:posterior(0.012)[1],x=l(thetha),col="black")
lines(y=1:posterior(0.161)[1],x=l(thetha),col="black")
theta=seq(0,1,length=100)
plot(theta,posterior(theta),type="l")
lines(theta,prior(theta),col="red")
qbeta(c(0.025,0.975),a+y,n-y+b)
l=function(thetha) rep(0.012,posterior(0.012)[1])
l2=function(thetha) rep(0.1610,posterior(0.161)[1])
lines(y=1:posterior(0.012)[1],x=l(thetha),col="black")
lines(y=1:posterior(0.161)[1],x=l(thetha),col="black")
qbeta(c(0.025,0.975),a+y,n-y+b)
l=function(thetha) rep(0.012,posterior(0.012)[1])
l2=function(thetha) rep(0.1610,posterior(0.161)[1])
lines(y=1:posterior(0.012)[1],x=l(thetha),col="black")
lines(y=1:posterior(0.161)[1],x=l2(thetha),col="black")
posterior(0.161)[1]
theta
x=qbeta(c(0.025,0.975),a+y,n-y+b)
x
segments(x[0],posterior[x[0]])
segments(x0=x[0],y0=posterior[x[0]],x=x[1],y=posterior(x[1]))
segments(x0=x[0],y0=posterior(x[0]),x=x[1],y=posterior(x[1]))
segments(x0=x[0],y0=0,x=x[1],y=posterior(x[1]))
x[0]
x[1]
segments(x0=x[1],y0=0,x=x[2],y=posterior(x[1]))
theta=seq(0,1,length=100)
plot(theta,posterior(theta),type="l")
lines(theta,prior(theta),col="red")
segments(x0=x[1],y0=0,x=x[2],y=posterior(x[1]))
segments(x0=x[1],y0=0,x=x[1],y=posterior(x[1]))
theta=seq(0,1,length=100)
plot(theta,posterior(theta),type="l")
lines(theta,prior(theta),col="red")
segments(x0=x[1],y0=0,x=x[1],y=posterior(x[1]))
segments(x0=x[2],y0=0,x=x[2],y=posterior(x[2]))
segments(x0=x[2],y0=0,x1=x[2],y1=posterior(x[2]))
posterior(x[2])
posterior(x[2])
x[2]
posterior(x[1])
posterior[x[2]]
x[1]
segments(x0=x[1],y0=0,x1=x[1],y1=posterior(x[1]))
segments(x0=x[2],y0=0,x1=x[2],y1=posterior[x[2]])
plot(theta,posterior(theta),type="l")
lines(theta,prior(theta),col="red")
segments(x0=x[1],y0=0,x1=x[1],y1=posterior(x[1]))
segments(x0=x[2],y0=0,x1=x[2],y1=posterior(x[2]))
posterior(x[1])
dbeta(x[2],y+a,n-y+b)
prior=function(thetha) dbeta(theta,a,b)
#posterior
posterior=function(thetha) dbeta(theta,y+a,n-y+b)
theta=seq(0,1,length=100)
plot(theta,posterior(theta),type="l")
lines(theta,prior(theta),col="red")
segments(x0=x[1],y0=0,x1=x[1],y1=posterior(x[1]))
segments(x0=x[2],y0=0,x1=x[2],y1=posterior(x[2]))
posterior(x[1])
x[1]
a=1
b=1
y=0
n=20
#prior
prior=function(thetha) dbeta(theta,a,b)
#posterior
posterior=function(thetha) dbeta(theta,y+a,n-y+b)
theta=seq(0,1,length=100)
plot(theta,posterior(theta),type="l")
lines(theta,prior(theta),col="red")
x=qbeta(c(0.025,0.975),a+y,n-y+b)
segments(x0=x[1],y0=0,x1=x[1],y1=posterior(x[1]))
segments(x0=x[2],y0=0,x1=x[2],y1=posterior(x[2]))
prior(0.02)
dbeta?
prior(0.3)
library(stats)
#prior
prior=function(thetha) dbeta(theta,a,b)
stats::prior(0.3)
stats::dbeta(0.3)
stats::dbeta(0.3,a,b)
prior(0.3)
?rno1mix::MarronWand
?no11mix::MarronWand
?nor1mix::MarronWand
?norlmix::MarronWand
install.packages("nor1mix")
?norlmix::MarronWand
?nor1mix::MarronWand
plot(rnorm(100))
density(rnorm(100))
plot(density(rnorm(100)))
b=seq(min(samp),max(samp),by=0.1)
samp=rnorm(100)
b=seq(min(samp),max(samp),by=0.1)
setwd("~/Desktop/Scalable and distributed computing/SDComputing_labs")
